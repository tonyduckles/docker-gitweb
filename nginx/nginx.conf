server {
    listen 80;
    server_name localhost;
    server_tokens off;

    root /usr/share/gitweb;

    gzip_static on;

    # brotli
    brotli on;
    brotli_static on;

    # IP detection
    set_real_ip_from  0.0.0.0/0;
    real_ip_header X-Forwarded-For;

    # Static repo files for cloning over http
    location ~ ^/git/.*\.git/objects/([0-9a-f]+/[0-9a-f]+|pack/pack-[0-9a-f]+.(pack|idx))$ {
        root ${PROJECTROOT};
    }

    # Requests that need to go to git-http-backend
    location ~ ^/git/(.*\.git/(HEAD|info/refs|objects/info/.*|git-(upload|receive)-pack))$ {
        rewrite ^/git(/.*)$ $1 break;
        root ${PROJECTROOT};

        include fastcgi_params;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
        fastcgi_param SCRIPT_FILENAME   /usr/libexec/git-core/git-http-backend;
        fastcgi_param PATH_INFO         $uri;
        fastcgi_param GIT_PROJECT_ROOT  ${PROJECTROOT};
        fastcgi_param GIT_HTTP_EXPORT_ALL "";
    }

    # Allow requests for static content files, else send it to gitweb
    try_files $uri @gitweb;
    location @gitweb {
        include fastcgi_params;
        fastcgi_pass  unix:/var/run/fcgiwrap.socket;
        fastcgi_param SCRIPT_FILENAME   /usr/share/gitweb/gitweb.cgi;
        fastcgi_param PATH_INFO         $uri;
        fastcgi_param GITWEB_CONFIG     /etc/gitweb/gitweb.conf;
    }

    # Healthcheck endpoint
    location /.ping {
        access_log off;
        return 200;
    }

    include /etc/nginx/extra.conf;
}
